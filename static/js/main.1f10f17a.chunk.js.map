{"version":3,"sources":["components/Expresso/Expresso.jsx","components/Buttons/Buttons.jsx","App.js","index.js","components/Expresso/Expresso.module.css"],"names":["Expresso","good","neutral","bad","className","styles","item","Buttons","state","handleIncrement","name","type","onClick","App","e","textButton","target","textContent","setState","prevState","this","Object","keys","map","index","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oSA4BeA,EAxBE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IACjC,OACE,8BACE,+BACE,oBAAIC,UAAWC,IAAOC,KAAtB,SACE,sCAASL,OAEX,oBAAIG,UAAWC,IAAOC,KAAtB,SACE,yCAAYJ,OAEd,oBAAIE,UAAWC,IAAOC,KAAtB,SACE,qCAAQH,aCSHI,EArBC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,KAEzC,OACE,wBAAoBC,KAAK,SAASC,QAASH,EAA3C,SACGC,GADUF,IC4CFK,G,kNA5CbL,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,gBAAkB,SAAAK,GAChB,IAAMC,EAAaD,EAAEE,OAAOC,YAG5B,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAaI,EAAUJ,GAAc,O,4CAS1C,WAAU,IAAD,OACP,EAA+BK,KAAKZ,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBO,EAAOW,OAAOC,KAAKF,KAAKZ,OAE9B,OACE,sBAAKJ,UAAU,MAAf,UACE,uDACA,6BACGM,EAAKa,KAAI,SAACjB,EAAMkB,GAAP,OACR,6BACE,cAAC,EAAD,CACEhB,MAAO,EAAKA,MACZC,gBAAiB,EAAKA,gBACtBC,KAAMJ,KAJDkB,QASb,4CACA,cAAC,EAAD,CAAUvB,KAAMA,EAAMC,QAASA,EAASC,IAAKA,W,GAxCnCsB,cCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,0B","file":"static/js/main.1f10f17a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Expresso.module.css';\n\nconst Expresso = ({ good, neutral, bad }) => {\n  return (\n    <div>\n      <ul>\n        <li className={styles.item}>\n          <p>good:{good}</p>\n        </li>\n        <li className={styles.item}>\n          <p>neutral:{neutral}</p>\n        </li>\n        <li className={styles.item}>\n          <p>bad:{bad}</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nExpresso.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n\nexport default Expresso;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ state, handleIncrement, name }) => {\n  // console.log(name);\n  return (\n    <button key={state} type=\"button\" onClick={handleIncrement}>\n      {name}\n    </button>\n\n    // {/* <button type=\"button\" onClick={handleIncrement}>\n    //   {state.neutral}\n    // </button>\n    // <button type=\"button\" onClick={handleIncrement}>\n    //   {state.bad}\n    //     </button> */}\n  );\n};\n\nButtons.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleIncrement: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React, { Component } from 'react';\nimport Expresso from './components/Expresso/Expresso';\nimport Buttons from './components/Buttons';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    const textButton = e.target.textContent;\n    // console.log(textButton);\n\n    this.setState(prevState => ({\n      [textButton]: prevState[textButton] + 1,\n\n      // good: prevState.good + 1,\n      // neutral: prevState.neutral + 1,\n      // bad: prevState.bad + 1,\n    }));\n    // console.log([textButton]);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const name = Object.keys(this.state);\n\n    return (\n      <div className=\"App\">\n        <h1>PLEASE LEAVE FEEDBACK</h1>\n        <ul>\n          {name.map((item, index) => (\n            <li key={index}>\n              <Buttons\n                state={this.state}\n                handleIncrement={this.handleIncrement}\n                name={item}\n              />\n            </li>\n          ))}\n        </ul>\n        <h2>Statistics</h2>\n        <Expresso good={good} neutral={neutral} bad={bad} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Expresso_item__1Hw_R\"};"],"sourceRoot":""}